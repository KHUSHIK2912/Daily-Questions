/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<int> nodesBetweenCriticalPoints(ListNode* head) 
    {
        vector<int> v;
        int i,a,b,c,n=0,mi=INT_MAX,mx=-1,j;
        ListNode* t=head;
        while(t->next->next!=NULL)
        {
            a=t->val;
            b=t->next->val;
            c=t->next->next->val;
            
            if((b>c && b>a)||(b<a && b<c))
                v.push_back(n+2);
            t=t->next;
            n++;
        }
        
        if(v.size()<2)
        {
            v.clear();
            v.push_back(-1);
            v.push_back(-1);
            return v;
        }
        n=v.size();
        mx=v[n-1]-v[0];
        for(i=0;i<v.size();i++)
        {
            for(j=i+1;j<v.size();j++)
            {
                mi=min(abs(v[i]-v[j]),mi);
                if(mi==1)
                    break;
            }
        }
        v.clear();
        v.push_back(mi);
        v.push_back(mx);
        return v;
    }
};
