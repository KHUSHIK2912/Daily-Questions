/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* node;
    TreeNode* search(TreeNode* root, int key)
    {
        if(root==NULL)
            return NULL;
        if(root->val==key)
            return root;
        
        if(root->val>key)
            return search(root->left, key);
        return search(root->right, key);
    }
    bool solve(TreeNode* root, int k)
    {
        if(root==NULL)
            return false;
        
        TreeNode* temp=search(node, k-root->val);
        if(temp!=NULL && temp!=root)
            return true;
        
        return (solve(root->left, k) || solve(root->right, k));
    }
    bool findTarget(TreeNode* root, int k) 
    {
        if(root==NULL)
            return false;
        node=root;
        return solve(root, k);
    }
};
