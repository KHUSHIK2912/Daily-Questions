/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    map<pair<int,int>,vector<int>> mp;
    void vertical(TreeNode* root, int d, int l)
    {
        if(root==NULL)
            return ;
        
        mp[{d,l}].push_back(root->val);
        
        vertical(root->left,d-1,l+1);
        vertical(root->right,d+1,l+1);
    }
    vector<vector<int>> verticalTraversal(TreeNode* root) 
    {        
        vertical(root,0,0);
        
        vector<vector<int>> v;
        map<int,vector<int>> mp1;
        
        for(auto it: mp)
        {
            sort(it.second.begin(), it.second.end());
            for(auto itr: it.second)
                mp1[it.first.first].push_back(itr);
        }
        
        for(auto it: mp1)
            v.push_back(it.second);
        
        return v;
    }
};
