/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) 
    {        
        if(root==NULL)
            return 0;
        
        queue<TreeNode*> q;
        q.push(root);
        TreeNode* node;
        int i,n,mx=0,flag=0;
        
        while(!q.empty())
        {
            n=q.size();
            mx++;
            for(i=0;i<n;i++)
            {
                node=q.front();
                q.pop();
                
                if(node)
                {
                    if(node->left==NULL && node->right==NULL)
                    {
                        flag=1;
                        break;
                    }
                    if(node->left)
                        q.push(node->left);
                    if(node->right)
                        q.push(node->right);
                }
            }
            if(flag==1)
                break;
        }
        return mx;
    }
};
