class NumMatrix {
public:
    vector<vector<long>> mat;
    
    NumMatrix(vector<vector<int>>&v) 
    {
        int i,j,n,m;
        n=v.size();
        m=v[0].size();
        mat=vector<vector<long>>(n+1, vector<long>(m+1,0));
        
        for(j=1;j<m+1;j++)
            mat[1][j]=mat[1][j-1]+v[0][j-1];
        
        for(i=2;i<n+1;i++)
        {
            for(j=1;j<m+1;j++)
            {
                if(j==0)
                    mat[i][j]=mat[i-1][j]+v[i-1][j-1];
                else
                    mat[i][j]=mat[i][j-1]+v[i-1][j-1]+mat[i-1][j]-mat[i-1][j-1];
            }
        }
        
        // for(i=0;i<n+1;i++)
        // {
        //     for(j=0;j<m+1;j++)
        //         cout<<mat[i][j]<<"  ";
        //     cout<<endl;
        // }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) 
    {
        return mat[row2+1][col2+1]-mat[row1][col2+1]-mat[row2+1][col1]+mat[row1][col1];
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */
