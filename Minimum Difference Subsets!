int subsetsum(vector<int>& nums, int sum)
{
    int n=nums.size(),i,j;
    bool t[n+1][sum+1];
    
    for(i=0;i<n+1;i++)
    {
        for(j=0;j<sum+1;j++)
        {
            if(i==0) 
                t[i][j]=false;
            if(j==0)
                t[i][j]=true;
        }
    }
        
    for(i=1;i<n+1;i++)
    {
        for(j=1;j<sum+1;j++)
        {
            if(nums[i-1]<=j)
                t[i][j]=(t[i-1][j-nums[i-1]] || t[i-1][j]);
            else
                t[i][j]=t[i-1][j];
        }
    }

    for(j=sum;j>=1;j--)
    {
        if(t[n][j]==true)
        {
            i=j;
            break;
        }
    }
    return i;
}


int Solution::solve(vector<int> &nums) 
{
    if(nums.size()<=1)
	    return nums[0];
    int i,sum=0;
    for(i=0;i<nums.size();i++)
    sum=sum+nums[i];
        
    int s=subsetsum(nums,sum/2);
    return (sum-(2*s));    
}
