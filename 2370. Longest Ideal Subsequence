class Solution {
public:
    vector<vector<int>> t;
    int solve(string& s, int i, int n, int& k, char ch)
    {
        if(i>=n)
            return 0;
        
        if(ch!='{' && t[i][ch-'a']!=-1)
            return t[i][ch-'a'];
        
        int d=abs(s[i]-ch);
        
        if(ch=='{' || d<=k)
            return t[i][ch-'a']=max(solve(s,i+1,n,k,ch), 1+solve(s,i+1,n,k,s[i]));
        
        return t[i][ch-'a']=solve(s,i+1,n,k,ch);
    }
    int longestIdealString(string s, int k) 
    {           
        int i,n=s.size();
        
        t=vector<vector<int>> (n+1, vector<int> (30,-1));
        return solve(s,0,n,k,'{');
    }
};
