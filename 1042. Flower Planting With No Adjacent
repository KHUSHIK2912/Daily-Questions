class Solution {
public:
    vector<vector<int>> adj;
    vector<vector<int>> col;
    vector<int> vis;
    
    void color(int u)
    {
        if(vis[u]==1)
            return;
        
        int curr;
        if(col[u][0]==-1)
        {
            col[u][0]=0;
            curr=0;
        }
        else if(col[u][1]==-1)
        {
            col[u][1]=0;
            curr=1;
        }
        else if(col[u][2]==-1)
        {
            col[u][2]=0;
            curr=2;
        }
        else if(col[u][3]==-1)
        {
            col[u][3]=0;
            curr=3;
        }
        
        if(vis[u]==1)
            return ;
        vis[u]=1;
        
        for(auto it: adj[u])
            col[it][curr]=1;
        
        for(auto it: adj[u])
            color(it);
    }
    vector<int> gardenNoAdj(int n, vector<vector<int>>& dis) 
    {
        adj=vector<vector<int>> (n+1);
        col=vector<vector<int>> (n+1, vector<int>(4,-1));
        vis=vector<int> (n+1, -1);
        
        int i,j;
        for(i=0;i<dis.size();i++)
        {
            adj[dis[i][0]].push_back(dis[i][1]);
            adj[dis[i][1]].push_back(dis[i][0]);
        }
        
        for(i=1;i<n+1;i++)
        {            
            if(vis[i]==-1)
                color(i);
        }
        
        for(i=0;i<n+1;i++)
        {
            for(j=0;j<4;j++)
            {
                if(col[i][j]==0)
                    vis[i]=j+1;
            }
        }
        vis.erase(vis.begin());
        return vis;
    }
};
