/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool hasOne(TreeNode* root)
    {
        if(root==NULL)
            return false;
        
        if(root->val==1)
            return true;
        
        if(root->left==NULL && root->right==NULL)
            return false;
        
        return (hasOne(root->left) || hasOne(root->right));
    }
    TreeNode* pruneTree(TreeNode* root) 
    {
        if(root==NULL || hasOne(root)==false)
            return NULL;
        
        if(root->left!=NULL && hasOne(root->left)==false)
            root->left=NULL;
        
        if(root->right!=NULL && hasOne(root->right)==false)
            root->right=NULL;
        
        if(root->left)
            pruneTree(root->left);
        
        if(root->right)
            pruneTree(root->right);
        
        return root;
    }
};
