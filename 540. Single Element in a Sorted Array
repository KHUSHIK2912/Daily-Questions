class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) 
    {
        if(nums.size()==1)
            return nums[0];
        
        if(nums[0]!=nums[1])
            return nums[0];
        
        int n=nums.size(),low=0,high=n-1,mid;
        
        if(nums[n-1]!=nums[n-2])
            return nums[n-1];
        
        while(low<=high)
        {
            mid=(low+high)/2;
            
            if(nums[mid]!=nums[mid+1] && nums[mid]!=nums[mid-1])
                return nums[mid];
            else if(nums[mid]==nums[mid+1])
            {
                if(mid%2==0)
                    low=mid+1;
                else
                    high=mid-1;
            }
            else if(nums[mid]==nums[mid-1])
            {
                if(mid%2==1)
                    low=mid+1;
                else
                    high=mid-1;
            }
        }
        
        return -1;
    }
};
