/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:    
    vector<vector<int>> levelOrder(Node* root) 
    {
        vector<vector<int>> ans;
        
        if(root==NULL)
            return ans;
        
        queue<Node*> q;
        q.push(root);
        Node* node;        
        
        vector<int> v;
                
        v.push_back(root->val);
        ans.push_back(v);
        
        int i,n;
        while(!q.empty())
        {
            v.clear();
            n=q.size();
            for(i=0;i<n;i++)
            {
                node=q.front();
                q.pop();
                
                if(node!=NULL)
                {
                    for(auto it: node->children)
                    {
                        v.push_back(it->val);
                        q.push(it);
                    }
                }
            }
            if(v.size()>0)
                ans.push_back(v);
        }
        
        return ans;
    }
};
