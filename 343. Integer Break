class Solution {
public:
    int countSubsets(vector<int>& nums, int sum, int n)
    {
        int i,j;
        int t[n+1][sum+1];
        
        for(i=0;i<n+1;i++)
        {
            for(j=0;j<sum+1;j++)
            {
                if(i==0)
                    t[i][j]=0;
                if(j==0)
                    t[i][j]=1;
            }
        }
        
        t[0][0]=1;
        
        for(i=1;i<n+1;i++)
        {
            for(j=1;j<sum+1;j++)
            {
                if(nums[i-1]<=j)
                    t[i][j]=max(nums[i-1]*t[i][j-nums[i-1]], t[i-1][j]);
                else
                    t[i][j]=t[i-1][j];
            }
        }
        
        // for(i=0;i<n+1;i++)
        // {
        //     for(j=0;j<sum+1;j++)
        //         cout<<t[i][j]<<"  ";
        //     cout<<endl;
        // }
        // cout<<endl;
        
        return t[n][sum];
    }
    int integerBreak(int n) 
    {
        vector<int> nums;
        int i;
        for(i=1;i<n;i++)
            nums.push_back(i);
        
        return countSubsets(nums, n, n-1);
    }
};
