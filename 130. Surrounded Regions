class Solution {
public:
    void dfs(vector<vector<char>>& board, int i, int j, int n, int m)
    {
        if(i>=n || j>=m || i<0 || j<0)
            return ;
        
        if(board[i][j]=='O')
            board[i][j]='*';
        
        if(i+1<n && board[i+1][j]=='O')
            dfs(board, i+1, j, n, m);
        if(j-1>=0 && board[i][j-1]=='O')
            dfs(board, i, j-1, n, m);
        if(j+1<m && board[i][j+1]=='O')
            dfs(board, i, j+1, n, m);
        if(i-1>=0 && board[i-1][j]=='O')
            dfs(board, i-1, j, n, m);
    }
    void solve(vector<vector<char>>& board) 
    {
        int i,j,n=board.size(), m=board[0].size();
        
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                if((i==0 || j==0 || i==n-1 || j==m-1) && board[i][j]=='O')
                    dfs(board,i,j,n,m);
            }
        }
        
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                if(board[i][j]=='O')
                    board[i][j]='X';
            }
        }
        
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                if(board[i][j]=='*')
                    board[i][j]='O';
            }
        }
    }
};
