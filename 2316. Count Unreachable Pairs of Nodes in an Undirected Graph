class Solution {
public:
    vector<bool> vis;
    vector<vector<long long>> vp;    
    long long get_comp(long long idx)
    {
        if(vis[idx])
            return 0;
        
        vis[idx]=true;
        long long ans=1;
        for(auto it: vp[idx])
        {
            if(!vis[it])
            {
                ans+=get_comp(it);
                vis[it]=true;
            }
        }
        return ans;
    }
    long long countPairs(int n, vector<vector<int>>& ed) 
    {
        long long i,j,c=0,t;
        
        vp=vector<vector<long long>>(n);
        vis=vector<bool>(n,0);
        vector<long long> v;
        
        for(i=0;i<ed.size();i++)
        {
            vp[ed[i][0]].push_back(ed[i][1]);
            vp[ed[i][1]].push_back(ed[i][0]);
        }
        
        for(i=0;i<n;i++)
        {
            if(!vis[i])
                v.push_back(get_comp(i));
        }
        
        for(i=0;i<v.size();i++)
        {
            t=n-v[i];
            c+=(t*v[i]);
            n-=v[i];
        }
        return c;
    }
};


