class Solution {
public:
    vector<int> NSL(vector<int>& arr, int n)
    {
        int i;
        vector<int> v;
        stack<pair<int,int>> st;
        
        for(i=0;i<n;i++)
        {
            if(st.size()==0)
                v.push_back(-1);
            else if(st.size()>0 && st.top().first<arr[i])
                v.push_back(st.top().second);
            else if(st.size()>0 && st.top().first>=arr[i])
            {
                while(!st.empty() && st.top().first>=arr[i])
                    st.pop();
                
                if(st.empty())
                    v.push_back(-1);
                
                else
                    v.push_back(st.top().second);
            }
            st.push({arr[i],i});
        }
        return v;
    }
    
    vector<int> NSR(vector<int>& arr, int n)
    {
        int i;
        vector<int> v;
        stack<pair<int,int>> st;
        
        for(i=n-1;i>=0;i--)
        {
            if(st.size()==0)
                v.push_back(n);
            else if(st.size()>0 && st.top().first<arr[i])
                v.push_back(st.top().second);
            else if(st.size()>0 && st.top().first>=arr[i])
            {
                while(!st.empty() && st.top().first>=arr[i])
                    st.pop();
                
                if(st.size()==0)
                    v.push_back(n);
                else
                    v.push_back(st.top().second);
            }
            st.push({arr[i],i});
        }
        
        reverse(v.begin(), v.end());
        return v;
    }
    
    int MAH(vector<int>& arr, int n)
    {
        int i,mx=0,ans;
        vector<int> left,right;
        
        left=NSL(arr,n);
        right=NSR(arr,n);
        
        for(i=0;i<n;i++)
        {
            left[i]=(right[i]-left[i]-1);
            ans=arr[i]*left[i];
            mx=max(ans,mx);
        }
        return mx;
    }
    
    int maximalRectangle(vector<vector<char>>& mat) 
    {
        int i,j,n=mat.size(),m=mat[0].size(),mx=0,ans=0;
        vector<vector<int>> v(n, vector<int>(m));
        
        for(i=0;i<m;i++)
            v[0][i]=mat[0][i]-'0';
        
        for(i=1;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                if(mat[i][j]!='0')
                    v[i][j]=v[i-1][j]+1;
                else
                    v[i][j]=0;
            }
        }
        
        for(i=0;i<n;i++)
        {
            ans=MAH(v[i], m);
            mx=max(mx,ans);
        }
        
        return mx;
    }
};
