/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int index(vector<int>& nums, int x, int y)
    {
        int i,idx=0,mx=-1;
        for(i=x;i<=y;i++)
        {
            if(mx<nums[i])
            {
                mx=nums[i];
                idx=i;
            }
        }
        return idx;
    }
    TreeNode* solve(vector<int>& nums, int i, int j, int n)
    {
        if(i<0 || i>=n || j<0 || j>=n || i>j)
            return NULL;
        
        int idx=index(nums,i,j);
        
        TreeNode* root=new TreeNode(nums[idx]);
        
        root->left=solve(nums,i,idx-1,n);
        root->right=solve(nums,idx+1,j,n);
        
        return root;
    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) 
    {
        return solve(nums,0,nums.size()-1,nums.size()); 
    }
};
