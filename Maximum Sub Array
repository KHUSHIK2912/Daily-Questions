class Solution{
public:
	vector<int> findSubarray(int a[], int n) 
	{
	    long long int i,j,idx=-1,sum=0,c=0,mxsum=0,mx=0,flag=0;
	    vector<int> v;
	    for(i=0;i<n;i++)
	    {
	        if(a[i]>=0)
	        {
	            flag=1;
	            sum+=a[i];
	            c++;
	        }
	        else
	        {
	            if(mxsum<sum)
	            {
	                mxsum=sum;
	                idx=i-1;
	                mx=c;
	            }
	            else if(mxsum==sum && mx<c)
	            {
	                mx=c;
	                idx=i-1;
	            }
	            
	            c=0;
	            sum=0;
	        }
	    }
	    
	    if(flag==0)
	    {
	        v.push_back(-1);
	        return v;
	    }
	    
	    if(mxsum<sum)
	    {
	        mxsum=sum;
	        idx=i-1;
	        mx=c;
	    }
	    else if(mxsum==sum && mx<c)
	    {
	        mx=c;
	        idx=i-1;
	    }
	    
	    while(mx>0)
	    {
	        v.push_back(a[idx]);
	        idx--;
	        mx--;
	    }
	    reverse(v.begin(), v.end());
	    return v;
	}
};
