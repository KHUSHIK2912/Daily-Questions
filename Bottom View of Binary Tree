class Solution {
  public:
    vector <int> bottomView(Node *root) 
    {
        vector<int> v;
        
        if(root==NULL)
        return v;
        
        map<int,int> mp;
        queue<pair<Node*,int>> q;
        q.push({root,0});
        
        int d;
        Node* node;
        
        while(!q.empty())
        {
            node=q.front().first;
            d=q.front().second;
            q.pop();
            
            if(node)
            {
                mp[d]=node->data;
                
                if(node->left)
                q.push({node->left, d-1});
                
                if(node->right)
                q.push({node->right, d+1});
            }
        }
        
        for(auto it: mp)
        v.push_back(it.second);
        
        return v;
    }
};
