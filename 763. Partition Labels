class Solution {
public:
    bool intersect(int a, int b, int x, int y)
    {
        if((x<b && x>a) || (y>a && y<b) || (a<y && a>x) || (b>x && b<y))
            return true;
        return false;
    }
    vector<int> partitionLabels(string s) 
    {
        int i,st,end,n;
        map<char,pair<int,int>> mp;
        vector<int> ans;
        vector<vector<int>> v;       
        
        for(i=0;i<s.size();i++)
        {
            if(mp[s[i]].first==0)
                mp[s[i]].first=i;
            mp[s[i]].second=i;            
        }
        
        mp[s[0]].first=0;
        for(auto it: mp)
            v.push_back({it.second.first, it.second.second});
        
        mp.clear();
        sort(v.begin(), v.end());
        
        st=v[0][0];
        end=v[0][1];
        for(i=1;i<v.size();i++)
        {
            if(intersect(st,end,v[i][0],v[i][1]))
            {
                st=min(st, v[i][0]);
                end=max(end, v[i][1]);
            }
            else
            {
                ans.push_back(end);
                st=v[i][0];
                end=v[i][1];
            }
        }
        ans.push_back(end);
        
        n=ans.size();
        vector<int> res(n);
        
        res[0]=ans[0]+1;
        for(i=1;i<ans.size();i++)
            res[i]=ans[i]-ans[i-1];
        
        ans.clear();
        
        return res;
    }
};
