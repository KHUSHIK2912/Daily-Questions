/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) 
    {
        if(head==NULL || head->next==NULL)
            return head;
        
        ListNode* dummy=new ListNode();
        ListNode* t=dummy;
        ListNode* t1=head;
        
        while(t1!=NULL && t1->next!=NULL)
        {
            if(t1->next->val>=x)
            {
                t->next=t1->next;
                t1->next=t1->next->next;
                t=t->next;
                t->next=NULL;
            }
            else
                t1=t1->next;
        }
        
        t=dummy->next;
        
        if(head->val>=x)
        {
            t1=head->next;
            dummy->next=head;
            head->next=t;
            head=t1;            
        }
        
        t1=head;
        while(t1!=NULL && t1->next!=NULL)
            t1=t1->next;
        
        if(t1!=NULL)
            t1->next=dummy->next;
        else
            head=dummy->next;
        
        return head;
    }
};
