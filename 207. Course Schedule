class Solution {
public:
    vector<vector<int>> adj;
    vector<int> stack;
    vector<bool> vis;
    bool isCycle(int src)
    {
        stack[src]=1;
        if(!vis[src])
        {
            vis[src]=true;
            for(auto it: adj[src])
            {
                if(!vis[it] && isCycle(it))
                    return true;
                if(stack[it]==1)
                    return true;
            }
        }
        stack[src]=0;
        return false;
    }
    
    bool canFinish(int n, vector<vector<int>>& pre) 
    {
        int i;
        adj=vector<vector<int>> (n);
        stack=vector<int> (n,0);
        vis=vector<bool> (n,false);
        
        for(i=0;i<pre.size();i++)
            adj[pre[i][1]].push_back(pre[i][0]);
        
        for(i=0;i<n;i++)
        {
            if(!vis[i] && isCycle(i))
                return false;
        }
        return true;
    }
};
