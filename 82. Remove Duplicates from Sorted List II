/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) 
    {
        if(head==NULL || head->next==NULL)
            return head;
        
        ListNode* t1=head;
        ListNode* t2=head->next;
        
        int t;
        while(t1!=NULL && t2!=NULL)
        {
            if(t1->val==t2->val)
            {
                t=t1->val;
                while(t2!=NULL && t2->val==t)
                {
                    t2->val=101;
                    t2=t2->next;
                }
                t1->val=101;
                t1=t2;                
            }
            else
                t1=t2;
            
            if(t2==NULL)
                break;
            
            t2=t2->next;
        }
        
        t1=head;
        while(t1->next!=NULL)
        {
            if(t1->next->val==101)
                t1->next=t1->next->next;
            else
                t1=t1->next;
        }
        
        if(head->val==101)
            head=head->next;
        
        return head;
    }
};
