class Solution {
public:
    string minWindow(string s, string p) 
    {
        if(s.size()<p.size())
            return "";
        unordered_map<char,int> mp;
        int i,j=0,n=s.size(),count;
        string st=s;
        
        for(i=0;i<p.size();i++)
            mp[p[i]]++;
        
        count=mp.size();
        
        i=0;
        j=0;
        while(j<n)
        {
            if(mp.find(s[j])!=mp.end())
            {
                mp[s[j]]--;
                if(mp[s[j]]==0)
                    count--;
            }
            if(count>0)
                j++;
            else if(count==0)
            {
                if(st.size()>j-i+1)
                    st=s.substr(i,j-i+1);
                while(count==0)
                {
                    if(mp.find(s[i])==mp.end())
                    {
                        i++;
                        if(st.size()>j-i+1)
                            st=s.substr(i,j-i+1);
                    }
                    else if(mp.find(s[i])!=mp.end())
                    {
                        mp[s[i]]++;
                        if(mp[s[i]]>0)
                        {
                            i++;
                            count++;
                        }
                        else
                        {
                            i++;
                            if(st.size()>j-i+1)
                                st=s.substr(i,j-i+1);
                        }
                    }                    
                }
                j++;
            }
        }
        
        mp.clear();
        for(i=0;i<st.size();i++)
            mp[st[i]]++;
        
        for(i=0;i<p.size();i++)
        {
            mp[p[i]]--;
            if(mp[p[i]]<0)
                return "";
        }
        return st;
    }
};
