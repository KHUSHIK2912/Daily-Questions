/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<ListNode*> splitListToParts(ListNode* head, int k) 
    {
        int c=0,p,i=0;
        ListNode* t=head;
        ListNode* t1;
        ListNode* t2;
        vector<ListNode*> v;
        
        while(t!=NULL)
        {
            c++;
            t=t->next;
        }
        vector<int> vec(k,c/k);
        p=c%k;
        while(p!=0)
        {
            vec[i]++;
            p--;
            i++;
        }
        t=head;
        t1=t;
        
        for(i=0;i<vec.size();i++)
        {
            while(t!=NULL && (vec[i]-1)>0)
            {
                t=t->next;
                vec[i]--;
            }
            if(t!=NULL)
            {
                t2=t->next;
                t->next=NULL;
            }
            v.push_back(t1);
            t=t2;
            t1=t2;
        }
        return v;
    }
};
